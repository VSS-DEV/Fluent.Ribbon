<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Fluent="clr-namespace:Fluent">
    <Style x:Key="Fluent.Ribbon.Styles.StatusBar"
           TargetType="{x:Type Fluent:StatusBar}">
        <Setter Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.AccentBase}" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <Fluent:StatusBarPanel Height="Auto"
                                           Margin="0"
                                           VerticalAlignment="Stretch"
                                           IsItemsHost="True" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="MinHeight" Value="23" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Fluent:StatusBar}">
                    <ControlTemplate.Resources>
                        <Style x:Key="{x:Static StatusBar.SeparatorStyleKey}"
                               TargetType="{x:Type Separator}">
                            <Setter Property="OverridesDefaultStyle" Value="True" />
                            <Setter Property="SnapsToDevicePixels" Value="True" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Separator}">
                                        <Border Width="10"
                                                Background="Transparent"
                                                BorderBrush="Transparent" />
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ControlTemplate.Resources>
                    <Border Background="{TemplateBinding Background}"
                            BorderThickness="0">
                        <ItemsPresenter x:Name="itemsPresenter" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding ResizeMode, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="CanResizeWithGrip">
                            <Setter TargetName="itemsPresenter" Property="Margin" Value="0 0 16 0" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Fluent.Ribbon.Styles.RibbonStatusBarItem"
           TargetType="{x:Type Fluent:StatusBarItem}">
        <Setter Property="Foreground" Value="{DynamicResource Fluent.Ribbon.Brushes.IdealForeground}" />
        <Setter Property="Margin" Value="0 0 2 0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Fluent:StatusBarItem}">
                    <ContentPresenter Margin="{TemplateBinding Padding}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalAlignment" Value="Center" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource Fluent.Ribbon.Brushes.IdealForegroundDisabled}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Menu Item Style -->
    <Style x:Key="Fluent.Ribbon.Styles.StatusBarMenuItem"
           TargetType="{x:Type Fluent:StatusBarMenuItem}">
        <Setter Property="Foreground" Value="{DynamicResource Fluent.Ribbon.Brushes.LabelText}" />
        <Setter Property="IsCheckable" Value="{Binding StatusBarItem.IsCheckable, RelativeSource={RelativeSource Self}}" />
        <Setter Property="IsChecked" Value="{Binding StatusBarItem.IsChecked, RelativeSource={RelativeSource Self}, Mode=TwoWay}" />
        <Setter Property="Template" Value="{DynamicResource Fluent.Ribbon.Templates.RibbonStatusBarContextMenuItem}" />
    </Style>

    <!-- Menu Item Template -->
    <ControlTemplate x:Key="Fluent.Ribbon.Templates.RibbonStatusBarContextMenuItem"
                     TargetType="{x:Type Fluent:StatusBarMenuItem}">
        <Grid Background="Transparent">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="25" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Border x:Name="border"
                    Grid.Column="0"
                    Grid.ColumnSpan="3"
                    Margin="0"
                    HorizontalAlignment="Stretch"
                    Background="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.Background}"
                    BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.Border}"
                    BorderThickness="1"
                    Visibility="Collapsed" />
            <TextBlock x:Name="textBlock"
                       Grid.Column="1"
                       Margin="5 3 3 3"
                       VerticalAlignment="Center"
                       Text="{Binding StatusBarItem.Title, RelativeSource={RelativeSource TemplatedParent}}"
                       TextTrimming="CharacterEllipsis" />
            <Image x:Name="image"
                   Grid.Column="0"
                   Width="16"
                   Height="16"
                   HorizontalAlignment="Center"
                   VerticalAlignment="Center"
                   SnapsToDevicePixels="True"
                   Source="{DynamicResource Fluent.Ribbon.Images.Checked}"
                   Stretch="Uniform"
                   Visibility="Collapsed" />
            <Fluent:IconPresenter x:Name="iconImage"
                                  Grid.Column="0"
                                  Margin="3 2 2 2"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  SmallIcon="{TemplateBinding Icon}" />
            <TextBlock Grid.Column="2"
                       Margin="9 3 3 3"
                       VerticalAlignment="Center"
                       Text="{Binding StatusBarItem.Value, RelativeSource={RelativeSource TemplatedParent}}"
                       TextTrimming="CharacterEllipsis" />
            <Path x:Name="path"
                  Grid.Column="2"
                  Width="4"
                  Height="6"
                  Margin="1 0 4 0"
                  HorizontalAlignment="Right"
                  Data="M0,0L1,1 0,2z"
                  Fill="{DynamicResource Fluent.Ribbon.Brushes.MenuItem.SubMenu.Arrow.Fill}"
                  Stretch="Fill"
                  Stroke="{x:Null}" />
        </Grid>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Icon" Value="{x:Null}" />
                    <Condition Property="IsChecked" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="image" Property="Visibility" Value="Visible" />
            </MultiTrigger>
            <Trigger Property="HasItems" Value="False">
                <Setter TargetName="path" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsHighlighted" Value="True" />
                    <Condition Property="IsEnabled" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="border" Property="Visibility" Value="Visible" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
</ResourceDictionary>
